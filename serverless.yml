# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: lash0000
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: gen-hotel
# "service" is the name of this project. This will also be added to your AWS resource names.
service: sia-mongo

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-2
  environment:
    S3_BUCKET_NAME: ${env:S3_BUCKET_NAME}
    FILE_UPLOAD_QUEUE_URL: !Ref FileUploadQueue
    MONGODB_URI: ${env:MONGODB_URI}
    UPLOADTHING_TOKEN: ${env:UPLOADTHING_TOKEN}
    RESEND_API_KEY: ${env:RESEND_API_KEY}
    MAIL_USERNAME: ${env:MAIL_USERNAME}
    MAIL_PASSWORD: ${env:MAIL_PASSWORD}
    CLIENT_EMAIL: ${env:CLIENT_EMAIL}
    PRIVATE_KEY: ${env:PRIVATE_KEY}
    PKEY_SCOPES: ${env:PKEY_SCOPES}
    PKEY_SCOPES_1: ${env:PKEY_SCOPES_1}

# Package configuration (This is already save my life ^^)
package:
  individually: true
  exclude:
    - test/**
    - .git/**
    - .vscode/**
    - venv/**
    - coverage/**

# If this does not work thru production DEADD!!!

functions:
  mediaFiles:
    handler: app.handler
    events:
      - httpApi:
          path: /api/v1/hotel/uploads/media_files
          method: get
      - httpApi:
          path: /api/v1/hotel/uploads/media_files/{id}
          method: get
      - httpApi:
          path: /api/v1/hotel/uploads/media_files
          method: post

  otpRegistration:
    handler: app.handler
    events:
      - httpApi:
          path: /api/v1/hotel/otp/registration
          method: post

  staffAccounts:
    handler: app.handler
    events:
      - httpApi:
          path: /
          method: get
      - httpApi:
          path: /api/v1/hotel/staff_accounts
          method: get
      - httpApi:
          path: /api/v1/hotel/staff_accounts
          method: post
      - httpApi:
          path: /api/v1/hotel/staff_accounts/{id}
          method: get
      - httpApi:
          path: /api/v1/hotel/staff_accounts/{id}
          method: put

resources:
  Resources:
    FileUploadQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sia102-file-upload-queue