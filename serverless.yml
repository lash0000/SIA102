# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: lash0000
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: gen-hotel
# "service" is the name of this project. This will also be added to your AWS resource names.
service: sia-mongo

plugins:
  - serverless-dotenv-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-southeast-2
  timeout: 20
  environment:
    MONGODB_URI: ${env:MONGODB_URI}
    UPLOADTHING_TOKEN: ${env:UPLOADTHING_TOKEN}
    RESEND_API_KEY: ${env:RESEND_API_KEY}
    MAIL_USERNAME: ${env:MAIL_USERNAME}
    MAIL_PASSWORD: ${env:MAIL_PASSWORD}

# Package configuration (This is already save my life ^^)
package:
  individually: true
  exclude:
    - test/**
    - .git/**
    - .vscode/**
    - venv/**
    - coverage/**

# If this does not work thru production DEADD!!!

functions:
  otpRegistration:
    handler: src/api/v1/hotel/otp/registration/controller.otpRegistration
    events:
      - httpApi:
          path: /api/v1/hotel/otp/otp-registration
          method: post
  staffAccounts:
    handler: app.handler
    events:
      - httpApi:
          path: /
          method: get
      - httpApi:
          path: /api/v1/hotel/staff_accounts
          method: get
      - httpApi:
          path: /api/v1/hotel/staff_accounts
          method: post
      - httpApi:
          path: /api/v1/hotel/staff_accounts/{id}
          method: get
      - httpApi:
          path: /api/v1/hotel/staff_accounts/{id}
          method: put
